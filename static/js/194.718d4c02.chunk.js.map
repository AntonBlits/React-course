{"version":3,"file":"static/js/194.718d4c02.chunk.js","mappings":"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","sources":["webpack://react-kabzda/./src/components/Profile/MyPost/Post/Post.module.css?5715","components/Profile/MyPost/Post/Post.jsx","webpack://react-kabzda/./src/components/Profile/MyPost/MyPost.module.css?5bea","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","webpack://react-kabzda/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KhjiJ\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({ amount, message }) => {\r\n   return (\r\n      <div className={s.item}>\r\n         <img src=\"http://img2.joyreactor.cc/pics/post/full/%D0%BB%D0%B8%D1%87%D0%BD%D0%BE%D0%B5-%D0%B0%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B0-art-%D0%BA%D1%80%D0%B0%D1%81%D0%B8%D0%B2%D1%8B%D0%B5-%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0%BA%D0%B8-5007944.jpeg\" alt=\"#\" />\r\n\r\n         <span>{message}</span>\r\n\r\n         <div>\r\n            <span>like </span>{amount}\r\n         </div>\r\n\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPost_postsBlock__gFeXC\",\"posts\":\"MyPost_posts__LIaO3\",\"error\":\"MyPost_error__aSQaR\"};","import React, { useEffect } from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPost.module.css';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst MyPostForm = ({ onSubmit }) => {\r\n   const { register, reset, handleSubmit, formState: { errors } } = useForm({ mode: 'all' });\r\n\r\n   useEffect(() => {\r\n      reset();\r\n   }, [onSubmit])\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n         <div>\r\n            <textarea placeholder='Write a post' className={errors.newPostText && s.error} {...register('newPostText', {\r\n               required: 'Your textarea is required',\r\n               maxLength: {\r\n                  value: 20,\r\n                  message: 'Your textarea exceed maxLength 20!'\r\n               }\r\n            })} />\r\n            {errors?.newPostText && <div style={{ color: 'red' }}>{errors?.newPostText?.message}</div>}\r\n         </div>\r\n         <div>\r\n            <button>add post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\n\r\nconst MyPost = ({ posts, addPost }) => {\r\n\r\n   let postsElement = posts.map(post => <Post key={post.id} message={post.message} amount={post.likesCount} />)\r\n\r\n   let onAddPost = (data) => {\r\n      addPost(data.newPostText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My post</h3>\r\n         <MyPostForm onSubmit={onAddPost} />\r\n         <div className={s.posts}>\r\n            {postsElement}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MyPost;\r\n\r\n","import { connect } from 'react-redux';\r\nimport { addPostActionCreate } from '../../../redux/profile-reducer';\r\nimport MyPost from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (newPostText) => dispatch(addPostActionCreate(newPostText)),\r\n   }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__zk6zW\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__ADdBk\",\"infoAboutMe\":\"ProfileInfo_infoAboutMe__G-ziR\",\"avatar\":\"ProfileInfo_avatar__TLE9f\",\"status\":\"ProfileInfo_status__gu9Ni\"};","import React, { useEffect, useRef, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n// class ProfileStatus extends React.Component {\r\n\r\n//    state = {\r\n//       editMode: false,\r\n//       status: this.props.status\r\n//    }\r\n//    activateEditMode = () => {\r\n//       this.setState({ editMode: true })\r\n//    }\r\n//    deactivateEditMode = () => {\r\n//       this.setState({ editMode: false })\r\n//       this.props.updateStatus(this.state.status);\r\n//    }\r\n//    onStatusChange = (e) => {\r\n//       this.setState({ status: e.currentTarget.value })\r\n//    }\r\n\r\n//    componentDidUpdate(prevProps, prevState) {\r\n//       if (prevProps.status !== this.props.status) {\r\n//          this.setState({\r\n//             status: this.props.status\r\n//          })\r\n//       }\r\n//    }\r\n//    render() {\r\n\r\n//       return <div className={s.status}>\r\n//          {this.state.editMode\r\n//             ? <div>\r\n//                <input autoFocus onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n//             </div>\r\n//             : <div>\r\n//                <span onDoubleClick={this.activateEditMode}>{this.props.status || '___'}</span>\r\n//             </div>}\r\n//       </div>\r\n//    }\r\n// }\r\n\r\n\r\nconst ProfileStatus = ({ status, updateStatus }) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [statusUser, setStatus] = useState(status);\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   }\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      updateStatus(statusUser);\r\n   }\r\n\r\n   useEffect(() => {\r\n      setStatus(status);\r\n   }, [status]);\r\n\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.target.value)\r\n   }\r\n   return <div className={s.status}>\r\n      {editMode\r\n         ? <div>\r\n            <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={statusUser} />\r\n         </div>\r\n         : <div>\r\n            <span onDoubleClick={activateEditMode}>{status || '___'}</span>\r\n         </div>}\r\n   </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userphoto from '../../../assets/images/noavatar.png';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n   if (!profile) {\r\n      return <Preloader />\r\n   }\r\n   return (\r\n      <div>\r\n         <div className={s.discriptionBlock}>\r\n            <div className={s.avatar}>\r\n               <img src={profile.photos.large != null ? profile.photos.large : userphoto} />\r\n            </div>\r\n            <div className={s.infoAboutMe}>\r\n               <h1>{profile.fullName}</h1>\r\n               <ProfileStatus status={status} updateStatus={updateStatus} />\r\n               <div className={s.about}>aboutMe: {profile.aboutMe}</div>\r\n               <div className={s.job}>lookingForAJobDescription: {profile.lookingForAJobDescription}</div>\r\n               <div className={s.contacts}>\r\n                  <h3>Contacts:</h3>\r\n                  <div>{profile.contacts.facebook}</div>\r\n                  <div>{profile.contacts.website}</div>\r\n                  <div>{profile.contacts.vk}</div>\r\n                  <div>{profile.contacts.twitter}</div>\r\n                  <div>{profile.contacts.instagram}</div>\r\n                  <div>{profile.contacts.youtube}</div>\r\n                  <div>{profile.contacts.github}</div>\r\n                  <div>{profile.contacts.mainLink}</div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = ({ profile, status, updateStatus }) => {\r\n   return (<div>\r\n      <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n      <MyPostContainer />\r\n   </div>\r\n   );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n// class ProfileContainer extends React.Component {\r\n//    componentDidMount() {\r\n\r\n//       let userId = this.props.match.params.userId;\r\n//       if (!userId) {\r\n//          userId = 23380;\r\n//       }\r\n\r\n//       this.props.getUserProfile(userId);\r\n//       this.props.getStatus(userId);\r\n//    }\r\n//    render() {\r\n//       return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n//    }\r\n// }\r\n\r\nconst ProfileContainer = ({ getUserProfile, getStatus, profile, status, updateStatus, ...props }) => {\r\n\r\n   let userId = useParams().userId;\r\n\r\n   useEffect(() => {\r\n      getUserProfile(userId);\r\n      getStatus(userId)\r\n   }, []);\r\n\r\n   return <Profile {...props} profile={profile} status={status} updateStatus={updateStatus} />\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText,\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      isAuth: state.auth.isAuth,\r\n      authorizedUserId: state.auth.userId\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n   // withRouter,\r\n   // withAuthRedirect\r\n)(ProfileContainer);"],"names":["amount","message","className","s","src","alt","MyPostForm","onSubmit","useForm","mode","register","reset","handleSubmit","errors","formState","useEffect","placeholder","newPostText","required","maxLength","value","style","color","posts","addPost","postsElement","map","post","likesCount","id","data","connect","state","profilePage","dispatch","addPostActionCreate","MyPost","status","updateStatus","useState","editMode","setEditMode","statusUser","setStatus","autoFocus","onChange","e","target","onBlur","onDoubleClick","profile","photos","large","userphoto","fullName","aboutMe","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","compose","isAuth","auth","authorizedUserId","userId","getUserProfile","getStatus","props","useParams"],"sourceRoot":""}